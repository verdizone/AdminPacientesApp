{"version":3,"sources":["components/Citas.js","components/Error.js","components/Formulario.js","App.js","reportWebVitals.js","index.js"],"names":["Citas","cita","eliminarCita","mascota","fecha","hora","propietario","info","className","onClick","id","Error","mensaje","Formulario","crearCita","useState","error","setError","setCita","actualizarState","e","target","name","value","onSubmit","preventDefault","length","uuidv4","htmlFor","type","placeholder","onChange","App","citasIniciales","JSON","parse","localStorage","getItem","citas","setCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAGaA,EAAQ,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAEnBC,EAA2CF,EAA3CE,QAASC,EAAkCH,EAAlCG,MAAOC,EAA2BJ,EAA3BI,KAAMC,EAAqBL,EAArBK,YAAaC,EAAQN,EAARM,KAE1C,OAEI,mCAEG,sBAAKC,UAAU,eAAf,UACK,0CAAY,+BAAOL,OACnB,wCAAU,+BAAOC,OACjB,uCAAS,+BAAOC,OAChB,2CAAU,+BAAOC,OACjB,8CAAa,+BAAOC,OACpB,wBACIE,QAAS,kBAAIP,EAAaD,EAAKS,KAC/BF,UAAU,+BAFd,iC,cCPDG,EARD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZ,OACI,8BACI,mBAAGJ,UAAU,+BAAb,SAA6CI,O,QCmJ1CC,EAnJI,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAEjB,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAAwBF,mBAAS,CAC7BZ,QAAS,GACTG,YAAa,GACbF,MAAO,GACPC,KAAM,GACNE,KAAM,KALV,mBAAON,EAAP,KAAaiB,EAAb,KASOf,EAA2CF,EAA3CE,QAASG,EAAkCL,EAAlCK,YAAaF,EAAqBH,EAArBG,MAAOC,EAAcJ,EAAdI,KAAME,EAAQN,EAARM,KAiCpCY,EAAkB,SAACC,GAErBF,EAAQ,2BACDjB,GADA,kBAEFmB,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAMlC,OACI,qCACI,oBAAIf,UAAU,wBAAd,0BAEIQ,EAAQ,cAAC,EAAD,CAAOJ,QAAQ,mCAAkC,KAE7D,uBACAY,SAhDU,SAACJ,GACfA,EAAEK,iBAECtB,EAAQuB,QAAU,GACjBpB,EAAYoB,QAAU,GACtBtB,EAAMsB,QAAU,GAChBrB,EAAKqB,QAAU,GACfnB,EAAKmB,QAAU,EACfT,GAAS,IAGbA,GAAS,GAGThB,EAAKS,GAAKiB,cAGVb,EAAUb,GAGViB,EAAQ,CACNf,QAAS,GACTG,YAAa,GACbF,MAAO,GACPC,KAAM,GACNE,KAAM,OAwBFC,UAAU,eAFZ,UAIE,uBAAOoB,QAAQ,UAAf,qBAGA,uBACEpB,UAAU,oBACVqB,KAAK,OACLnB,GAAG,UACHoB,YAAY,uBACZR,KAAK,UACLS,SAAUZ,EACVI,MAAOpB,IAIT,uBAAOyB,QAAQ,cAAf,sBAGA,uBACEpB,UAAU,oBACVqB,KAAK,OACLnB,GAAG,cACHoB,YAAY,sBACZR,KAAK,cACLS,SAAUZ,EACVI,MAAOjB,IAIT,uBAAOsB,QAAQ,QAAf,mBAGA,uBACEpB,UAAU,oBACVqB,KAAK,OACLnB,GAAG,QACHY,KAAK,QACLS,SAAUZ,EACVI,MAAOnB,IAIT,uBAAOwB,QAAQ,OAAf,kBAGA,uBACEpB,UAAU,oBACVqB,KAAK,OACLnB,GAAG,OACHY,KAAK,OACLS,SAAUZ,EACVI,MAAOlB,IAIT,uBAAOuB,QAAQ,OAAf,yBAGA,0BACEpB,UAAU,oBACVE,GAAG,OACHoB,YAAY,2CACZR,KAAK,OACLS,SAAUZ,EACVI,MAAOhB,IAGP,wBACIsB,KAAK,SACLrB,UAAU,qCAFd,iCC9CDwB,MAvFf,WAGE,IAAIC,EAAiBC,KAAKC,MAAOC,aAAaC,QAAQ,UAElDJ,IACFA,EAAiB,IAInB,MAA0BlB,mBAASkB,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAGAC,qBAAW,WAEYN,KAAKC,MAAOC,aAAaC,QAAQ,UAGpDD,aAAaK,QAAQ,QAASP,KAAKQ,UAAUJ,IAE7CF,aAAaK,QAAQ,QAASP,KAAKQ,UAAW,OAE/C,CAACJ,IAIJ,IASMpC,EAAe,SAACQ,GACpB,IAAMiC,EAAcL,EAAMM,QAAO,SAAA3C,GAAI,OAAIA,EAAKS,KAAOA,KACrD6B,EAASI,IAQLE,EAA0B,IAAjBP,EAAMZ,OAAe,eAAiB,uBAMrD,OACE,mCACE,sBAAKlB,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,wBAAd,wCACA,0BAEF,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CACEM,UAnCM,SAACb,GACjBsC,EAAS,GAAD,mBACHD,GADG,CAENrC,UAmCI,sBAAKO,UAAU,WAAf,UACE,oBAAIA,UAAU,wBAAd,SAAuCqC,IAGrCP,EAAMQ,KAAK,SAAA7C,GAAI,OAEb,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,GAFTD,EAAKS,mBC/DbqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2155df83.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const Citas = ( {cita, eliminarCita} ) => {\n\n    const {mascota, fecha, hora, propietario, info} = cita;\n\n    return (\n\n        <>\n\n           <div className=\"form-control\">\n                <p>Mascota: <span>{mascota}</span></p>\n                <p>Fecha: <span>{fecha}</span></p>\n                <p>Hora: <span>{hora}</span></p>\n                <p>Dueño: <span>{propietario}</span></p>\n                <p>Síntomas: <span>{info}</span></p>\n                <button \n                    onClick={()=>eliminarCita(cita.id)}\n                    className=\"btn btn-outline-danger w-100\"\n                >\n                    Eliminar &times;\n                </button>\n            </div>\n        \n        </>\n    )\n}\n\nCitas.propTypes = {\n    cita: PropTypes.object.isRequired,\n    eliminarCita: PropTypes.func.isRequired,\n}\n","import React from 'react'\n\nconst Error = ({mensaje}) => {\n    return (\n        <div>\n            <p className=\"alert alert-info text-center\">{mensaje}</p>\n        </div>\n    )\n}\n\nexport default Error\n","import React, { useState } from 'react'\nimport Error from './Error';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types'\n\nconst Formulario = ({crearCita}) => {\n\n    const [error, setError] = useState(false);\n\n    const [cita, setCita] = useState({\n        mascota: '',\n        propietario: '',\n        fecha: '',\n        hora: '',\n        info: '',\n\n    });\n\n    const {mascota, propietario, fecha, hora, info} = cita;\n\n    const handleAdd = (e) => {\n        e.preventDefault();\n        //Validar form\n        if(mascota.length <= 0 || \n            propietario.length <= 0 || \n            fecha.length <= 0 || \n            hora.length <= 0 || \n            info.length <= 0 ){\n            setError(true);\n            return;\n        }\n        setError(false);\n\n        //Agregar un id\n        cita.id = uuidv4();\n\n        //Crear la cita\n        crearCita(cita);\n\n        //Reiniciar el form\n        setCita({\n          mascota: '',\n          propietario: '',\n          fecha: '',\n          hora: '',\n          info: '',\n        });\n\n\n    }\n\n    const actualizarState = (e) => {\n        // console.log(e.target.value);\n        setCita({\n            ...cita,\n            [e.target.name]: e.target.value,\n        \n        })\n\n    }\n\n    return (\n        <>\n            <h1 className=\"text-center display-6\">Agendar Cita</h1>\n            {\n                error ? <Error mensaje=\"No debe haber campos vacíos\"/> : null\n            }\n            <form \n            onSubmit={handleAdd}\n              className=\"form-control\"\n            >\n              <label htmlFor=\"mascota\">\n                Mascota\n              </label>\n              <input\n                className=\"form-control mb-2\"\n                type=\"text\"\n                id=\"mascota\"\n                placeholder=\"Nombre de la mascota\"\n                name=\"mascota\"\n                onChange={actualizarState}\n                value={mascota}\n                \n\n              />\n              <label htmlFor=\"propietario\">\n                Dueño\n              </label>\n              <input\n                className=\"form-control mb-2\"\n                type=\"text\"\n                id=\"propietario\"\n                placeholder=\"Nombre del dueño\"\n                name=\"propietario\"\n                onChange={actualizarState}\n                value={propietario}\n\n\n              />\n              <label htmlFor=\"fecha\">\n                Fecha\n              </label>\n              <input\n                className=\"form-control mb-2\"\n                type=\"date\"\n                id=\"fecha\"\n                name=\"fecha\"\n                onChange={actualizarState}\n                value={fecha}\n\n\n              />\n              <label htmlFor=\"hora\">\n                Hora\n              </label>\n              <input\n                className=\"form-control mb-2\"\n                type=\"time\"\n                id=\"hora\"\n                name=\"hora\"\n                onChange={actualizarState}\n                value={hora}\n\n\n              />\n              <label htmlFor=\"info\">\n                Síntomas\n              </label>\n              <textarea\n                className=\"form-control mb-2\"\n                id=\"info\"\n                placeholder=\"Información del paciente al ingresar.\"\n                name=\"info\"\n                onChange={actualizarState}\n                value={info}\n              >\n              </textarea>\n                <button \n                    type=\"submit\"\n                    className=\"btn btn-outline-primary w-100 mt-2\"\n                >\n                    Agregar Cita\n                </button>\n            </form>   \n        </>\n    )\n}\n\nFormulario.propTypes = {\n  crearCita : PropTypes.func.isRequired,\n}\n\nexport default Formulario\n","import { useState, useEffect } from \"react\";\nimport { Citas } from \"./components/Citas\";\nimport Formulario from \"./components/Formulario\";\n\nfunction App() {\n\n  //Citas en local Storage\n  let citasIniciales = JSON.parse( localStorage.getItem('citas') );\n\n  if(!citasIniciales){\n    citasIniciales = [];\n  }\n\n\n  const [citas, setCitas] = useState(citasIniciales);\n  \n  //State para realizar operaciones cuando el state cambia\n  useEffect( ()=>{\n    \n    let citasIniciales = JSON.parse( localStorage.getItem('citas') );\n\n    if(citasIniciales){\n      localStorage.setItem('citas', JSON.stringify(citas));\n    }else{\n      localStorage.setItem('citas', JSON.stringify( [] ));\n    }\n  }, [citas] );\n\n  //Funcion que tome las citas actuales y  agregue una nueva\n\n  const crearCita = (cita) =>{\n    setCitas([\n      ...citas,\n      cita\n    ])\n  }\n\n  //Funcion que elimina una cita por su id\n\n  const eliminarCita = (id) =>{\n    const nuevasCitas = citas.filter(cita => cita.id !== id);\n    setCitas(nuevasCitas);\n\n  }\n\n  //Mensaje condicional\n\n  // console.log(citas.length);\n\n  const titulo = citas.length === 0 ? 'No hay Citas' : 'Administra tus Citas';\n\n  // console.log(titulo);\n\n\n  \n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <h1 className=\"text-center display-4\">Administrador de Pacientes</h1>\n          <hr/>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <Formulario \n              crearCita= {crearCita}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <h1 className=\"text-center display-6\">{titulo}</h1>\n\n            {\n              citas.map( cita =>(\n\n                <Citas\n                  key={cita.id} \n                  cita={cita}\n                  eliminarCita={eliminarCita}\n                />\n                \n              ))\n            }\n\n          </div>\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}